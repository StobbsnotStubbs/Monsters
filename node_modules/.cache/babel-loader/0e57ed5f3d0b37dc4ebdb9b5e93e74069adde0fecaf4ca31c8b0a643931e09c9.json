{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Coding\\\\Monster\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-bar/search-box.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(); // To get the daddy's constructors.\n    this.onSearchChange = event => {\n      const searchField = event.target.value.toLocaleLowerCase();\n      this.setState(() => {\n        return {\n          searchField\n        };\n      });\n    };\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n    console.log(\"1 constructor\");\n  }\n\n  // Get the data from the API once the app is rendered\n  componentDidMount() {\n    console.log(\"3 componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate()\");\n  }\n  render() {\n    console.log(\"2 render\");\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const {\n      onSearchChange\n    } = this;\n    const filterMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Monsters Index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        onChangeHandler: onSearchChange,\n        placeHolder: \"Search Monsters\",\n        className: \"monsters-search-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        monsters: filterMonsters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","CardList","SearchBox","App","constructor","onSearchChange","event","searchField","target","value","toLocaleLowerCase","setState","state","monsters","console","log","componentDidMount","fetch","then","response","json","users","componentDidUpdate","render","filterMonsters","filter","monster","name","includes"],"sources":["Z:/Coding/Monster/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-bar/search-box.component\";\nclass App extends Component {\n  constructor() {\n    super(); // To get the daddy's constructors.\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    console.log(\"1 constructor\");\n  }\n\n  // Get the data from the API once the app is rendered\n  componentDidMount() {\n    console.log(\"3 componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) =>\n        this.setState(\n          () => {\n            return { monsters: users };\n          },\n          () => {\n            console.log(this.state);\n          }\n        )\n      );\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate()\");\n  }\n  onSearchChange = (event) => {\n    const searchField = event.target.value.toLocaleLowerCase();\n\n    this.setState(() => {\n      return { searchField };\n    });\n  };\n\n  render() {\n    console.log(\"2 render\");\n    const { monsters, searchField } = this.state;\n    const { onSearchChange } = this;\n\n    const filterMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">Monsters Index</h1>\n        <SearchBox\n          onChangeHandler={onSearchChange}\n          placeHolder=\"Search Monsters\"\n          className=\"monsters-search-box\"\n        />\n        <CardList monsters={filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;AAAC;AACrE,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAW,GAAG;IACZ,KAAK,EAAE,CAAC,CAAC;IAAA,KA4BXC,cAAc,GAAIC,KAAK,IAAK;MAC1B,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,iBAAiB,EAAE;MAE1D,IAAI,CAACC,QAAQ,CAAC,MAAM;QAClB,OAAO;UAAEJ;QAAY,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC;IAjCC,IAAI,CAACK,KAAK,GAAG;MACXC,QAAQ,EAAE,EAAE;MACZN,WAAW,EAAE;IACf,CAAC;IACDO,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B;;EAEA;EACAC,iBAAiB,GAAG;IAClBF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCE,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IACV,IAAI,CAACV,QAAQ,CACX,MAAM;MACJ,OAAO;QAAEE,QAAQ,EAAEQ;MAAM,CAAC;IAC5B,CAAC,EACD,MAAM;MACJP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;IACzB,CAAC,CACF,CACF;EACL;EAEAU,kBAAkB,GAAG;IACnBR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC;EASAQ,MAAM,GAAG;IACPT,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,MAAM;MAAEF,QAAQ;MAAEN;IAAY,CAAC,GAAG,IAAI,CAACK,KAAK;IAC5C,MAAM;MAAEP;IAAe,CAAC,GAAG,IAAI;IAE/B,MAAMmB,cAAc,GAAGX,QAAQ,CAACY,MAAM,CAAEC,OAAO,IAAK;MAClD,OAAOA,OAAO,CAACC,IAAI,CAACjB,iBAAiB,EAAE,CAACkB,QAAQ,CAACrB,WAAW,CAAC;IAC/D,CAAC,CAAC;IAEF,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QAAI,SAAS,EAAC,WAAW;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAK,eAC7C,QAAC,SAAS;QACR,eAAe,EAAEF,cAAe;QAChC,WAAW,EAAC,iBAAiB;QAC7B,SAAS,EAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAC/B,eACF,QAAC,QAAQ;QAAC,QAAQ,EAAEmB;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC;EAEV;AACF;AAEA,eAAerB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}